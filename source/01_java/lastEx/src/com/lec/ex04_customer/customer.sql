DROP TABLE CUSTOMER;
DROP TABLE CUS_LEVEL;

--CREATE TABLE
CREATE TABLE CUS_LEVEL(
    LEVELNO NUMBER(1,0) PRIMARY KEY,
    LEVELNAME VARCHAR2(20) ,
    LOW NUMBER(10,0) ,
    HIGH  NUMBER(10,0));

CREATE TABLE CUSTOMER(
    CID NUMBER(6,0) PRIMARY KEY,
    CTEL VARCHAR2(20) NOT NULL,
    CNAME VARCHAR2(20) NOT NULL,
    CPOINT NUMBER(10,0) DEFAULT 1000,
    CAMOUNT NUMBER(10,0) DEFAULT 0,
    LEVELNO NUMBER(1,0) DEFAULT 1 REFERENCES CUS_LEVEL(LEVELNO));
DROP  SEQUENCE CUS_SEQ;
CREATE SEQUENCE CUS_SEQ MAXVALUE 9999 NOCACHE NOCYCLE;    

INSERT INTO CUS_LEVEL VALUES (1, 'NORMAL', 0, 999999);
INSERT INTO CUS_LEVEL VALUES (2, 'SILVER', 1000000, 1999999);
INSERT INTO CUS_LEVEL VALUES (3, 'GOLD',   2000000, 2999999);
INSERT INTO CUS_LEVEL VALUES (4, 'VIP',    3000000, 3999999);
INSERT INTO CUS_LEVEL VALUES (5, 'VVIP',   4000000, 9999999999);

INSERT INTO CUSTOMER VALUES(CUS_SEQ.NEXTVAL,'010-9999-9999','김민우',51000,1000000,2);
INSERT INTO CUSTOMER VALUES(CUS_SEQ.NEXTVAL,'010-8888-9999','김토치',0,4000000,5);
INSERT INTO CUSTOMER VALUES(CUS_SEQ.NEXTVAL,'010-7777-9999','김토치',3000,100000,1);
INSERT INTO CUSTOMER VALUES(CUS_SEQ.NEXTVAL,'010-7777-7777','김루키',51000,1000000,2);
INSERT INTO CUSTOMER VALUES(CUS_SEQ.NEXTVAL,'010-6666-6666','김이나',0,100000,1);
COMMIT;
SELECT * FROM CUS_LEVEL;
SELECT * FROM CUSTOMER;
-- 프로그램에서 필요한 QUERY
-- 0. 레벨이름들 검색 : public Vector<String> getLevelNames() DAO에 넣어야함
SELECT LEVELNAME FROM CUS_LEVEL ; 
-- 1. 아이디 검색 : public CustomerDto cIdGetCustomer(int cId)
    -- CID, CTEL, CNAME, CPOINT, CAMOUNT,LEVELNAME ,forLEVELUP
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT,LEVELNAME ,
(SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) forLEVELUP
FROM CUSTOMER C, CUS_LEVEL L WHERE C.LEVELNO=L.LEVELNO AND CID=2 ;
-- 2. 폰뒤4자리(FULL) 검색 -CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLEVELUP
--                       public ArrayList<CustomerDto> cTelGetCustomers(String cTel);
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT,LEVELNAME ,
(SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) forLEVELUP
FROM CUSTOMER C, CUS_LEVEL L 
    WHERE C.LEVELNO=L.LEVELNO 
    AND CTEL LIKE '%'||'9999' ;
-- 3. 고객이름검색 -CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLEVELUP
--                       public ArrayList<CustomerDto> cNameGetCustomers(String cName);
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT,LEVELNAME ,
(SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) forLEVELUP
FROM CUSTOMER C, CUS_LEVEL L 
    WHERE C.LEVELNO=L.LEVELNO 
    AND CNAME='김토치' ORDER BY CAMOUNT DESC;
-- 4. 포인트로만 구매(1번 ID가 100원짜리를 포인트로만 구매) : public int buyWithPoint(int cAmount, int cId)
    --CID CPOINT(UPDATE) CAMOUNT
UPDATE CUSTOMER SET CPOINT = CPOINT-100 
WHERE CID=1;
COMMIT;
SELECT * FROM CUSTOMER;
-- 5. 물품구매 (1000000원짜리를 구매할 경우. 포인트는 구매금액의 5%)
    -- 물품구매시 UPDATE에는 CPOINT,CAMOUNT,LEVELNO가 수정 
    --  public int buy(int cAmount, int cId)
-- 5-1
--UPDATE CUSTOMER SET CPOINT = CPOINT + (1000000*(SELECT PER FROM CUS_LEVEL WHERE CID=1)) 
UPDATE CUSTOMER SET CPOINT=CPOINT+(1000000*0.05),
                                    CAMOUNT = CAMOUNT + 1000000
                                    WHERE CID =1;
SELECT * FROM CUSTOMER;                                    
-- 5-2 LEVELNO 변경하기 전 현 레벨번호와 수정될 레벨번호
SELECT CID, CNAME, C.LEVELNO 현레벨, L.LEVELNO 수정될레벨 FROM CUSTOMER C, CUS_LEVEL L
WHERE CAMOUNT BETWEEN LOW AND HIGH AND CID= 1;
-- 5-3 LEVELNO를 수정
UPDATE CUSTOMER SET LEVELNO = (
SELECT  L.LEVELNO  FROM CUSTOMER C, CUS_LEVEL L
WHERE CAMOUNT BETWEEN LOW AND HIGH AND CID= 1)
WHERE CID =1 ;
SELECT * FROM CUSTOMER;
-- 5-1 + 5-3
UPDATE CUSTOMER  SET CPOINT=CPOINT+(1000000*0.05),
 CAMOUNT = CAMOUNT + 1000000,
 LEVELNO = (SELECT  L.LEVELNO  FROM CUSTOMER C, CUS_LEVEL L
WHERE CAMOUNT+1000000 BETWEEN LOW AND HIGH AND CID= 6) --해당 CID를 바꿔야하는 단일행쿼리
WHERE CID =6 ; -- DAO에 들어갈 전체 쿼리 
SELECT * FROM CUSTOMER;
-- 6. 등급별출력 - CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLEVELUP
--              public ArrayList<CustomerDto> levelNameGetCustomers(String levelName)
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT,LEVELNAME ,
(SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) forLEVELUP
FROM CUSTOMER C, CUS_LEVEL L 
    WHERE C.LEVELNO=L.LEVELNO 
    AND LEVELNAME='NORMAL' ORDER BY CAMOUNT DESC;
-- 7.전체출력 - CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLEVELUP
--            public ArrayList<CustomerDto> getCustomers()
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT,LEVELNAME ,
        (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L 
        WHERE C.LEVELNO=L.LEVELNO 
    ORDER BY CAMOUNT DESC;
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT,LEVELNAME        
    FROM CUSTOMER C, CUS_LEVEL L 
        WHERE C.LEVELNO=L.LEVELNO ;
-- 8. 회원가입(고객전화와 고객이름은 입력받아 INSERT)
--          public int insertCustomer(String cTel, String cName)
INSERT INTO CUSTOMER (CID, CTEL, CNAME)
    VALUES(CUS_SEQ.NEXTVAL, '010-5555-5555','김토토');
    SELECT * FROM CUSTOMER;
-- 9. 번호수정 : public int updateCustomer(String cTel, int cId)
UPDATE CUSTOMER SET CTEL = '010 -5555-5557' WHERE CID=6;
-- 10. 회원탈퇴 : public int deleteCustomer(String cTel)
DELETE FROM CUSTOMER WHERE CTEL='010-5557-5556';
COMMIT;