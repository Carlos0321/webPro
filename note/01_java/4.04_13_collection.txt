어떠한 자료를 나중에 재활용하기 위해서 우리는 데이터를 차곡차곡 잘 정리해서 저장해 두어야 한다. 정리할 때 데이터의 속성에 맞춰서 저장해야 하므로 자료구조가 여러 가지 존재할 수 있다. 이러한 자료구조들을 collections라고 한다.

ArrayList ; 배열과 매우 비슷. 인덱스가 존재하며 데이터는 중복을 허용. 인덱스가 가장 중요
기초데이터 타입은 안되고 객체데이터 타입만 가능 
-	add(객체)
-	add(index, 객체)
-	set(index, 객체)
-	get(index)
-	size()
-	remove(index)
-	remove(객체)
-	contains(객체) 주어진 객체가 저장되어 있는지 여부를 boolean 값으로 반환
-	isEmpty()
-	clear()
Map계열의 자료구조는 인덱스 대신 키 값으로 데이터를 액세스한다.
List계열과 달리 인덱스가 없고, 키와 값만 있다. 그리고 키는 유니크 해야 한다. 우리가 값을 관리하고자 한다면 키를 이용해서 값을 관리할 수 있다. 

Set계열 자료구조에서는 데이터의 순서는 없다(인덱스 없다). 하지만 중복된 데이터는 허락하지 않는다.
중복된 데이터의 의미는 hashcode()값이 같거나 equal()메소드의 결과값에 의해 해석

Iterator라는 의미는 '반복자'라는 의미로 데이터를 반복적으로 검색하는데 유용한 인터페이스