스캐너 객체의 close는 main함수에서만 한다 

Wrapper클래스는 기초데이타를 객체데이터로 변화시키는 클래스 
Timer객체는 일정한 시간이 되면, TimerTask객체가 작동되도록 하거나 일정시간마다 TimerTask객체가 작동되도록 합니다. 단, TimerTask클래스는 추상클래스이므로, 
TimerTask클래스를 상속받는 클래스를 만들어서 사용해야 합니다

예외란?
문제 없을 것 같은 프로그램도 외부환경요인 등에 의해서 문제가 발생하곤 합니다.
프로그램에서 문제가 발생될 만한 곳을 예상하여 사전에 "문제가 발생하면 이렇게 해라"라고 프로그래밍 하는 것을 예외 처리라고 합니다.

예외의 필요성은 어느 한 부분에서 예외가 발생하더라도 계속해서 프로그램이 동작되도록 하는데 목적이 있습니다
try {
	    try블럭 ; 익셉션이 발생할 가능성이 있는 명령문들(문제가 발생할 수 있는 로직을 기술)

	}catch(익셉션타입 익셉션변수) {
	    그 익셉션을 처리하는 명령문(try블록안에서 문제가 발생했을 때 대처방안 기술);

	} finally {
	    익셉션 발생 여부와 상관없이 맨 마지막에 실행할 명령문;
	}
finally 끝내 실행합니다. finally 블럭은 try와 catch문의 영향 없이 무조건 실행된다.

throws의 경우에는 나를 호출한(실행시키는) 쪽으로 예외를 던져버리는 방식

예외처리는 보험이다.
예외가 발생 했을 때 프로세스가 죽지 않게 예외처리를 자체적으로 처리할 수도 있고(try~catch), 내가 처리 안하고 나를 부른데서 알아서 할테니 걍 던져 버릴 수도 있다(throws)
