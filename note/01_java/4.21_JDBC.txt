JDBC 프로그래밍 : 자바 데이터베이스 프로그래밍 API

(1)JDBC 드라이버 : 오라클 드라이버또는 MySQL 드라이버를 자바가 설치되어 있는 C:\Program Files\Java\jre1.8.0_XXX\lib\ext 폴더(%JAVA_HOME%/JRE/LIB/EXT 폴더)에 다음의 두 파일을 복사한다.
ojdbc6.JAR (C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib)
mysql-connector-java-8.0.28.jar (C:\Program Files (x86)\MySQL\Connector J 8.0)
MySQL버전에 따라 드라이버 파일은 다름 ex)mysql-connector-java-8.0.x.jar

(2)이클립스에서 Windows 메뉴 – preferences – Java – Installed JREs – edit – Add External JARs을 통해 두개의 jar를 등록 후 Restore Default 클릭 후 finish

JDBC프로그래밍 단계와 사용 클래스
①JDBC 드라이버 로드 (JDBC 드라이버를 로드한다) : Class.forName()을 이용. 드라이버 클래스 로딩(드라이버 필요)
	사용 API : Class.ForName()
②데이터베이스 연결 (DB에 연결한다) : DriverManager.getConnection()을 이용해 Connection 객체 생성(접속 URL, id, passwd등 필요)
	사용 API : java.sql.Connection
③Statement 생성 (SQL문을 수행할 객체 생성한다) : SQL을 이용해 DB를 조회하거나 다룸. Statement는 SQL 처리 기본 객체
	사용 API : java.sql.Statement	java.sql.preparedStatement
④SQL문 전송 (SQL문 수행전송하고 결과 받는다): SQL 문 Statement 객체의 executeQuery(), executeUpdate() 메소드를 이용, 데이텁이스로 전달해 처리
	사용 API : java.sql.Statement.executeQuery()	java.sql.Statement.executeUpdate()
⑤결과 받기 : SQL 실행 결과를 반환 받아야 하는 값이 있따면 ResultSet객체로 받음
	사용 API : java.sql.ResultSet
⑥결과 받아 원하는 로직 수행 (수행한 결과를 읽어 원하는 로직을 수행한다 (필요할 때까지 반복)
⑦연결 해제 ( DB 연결을 끊는다) : 사용한 자원을 반납함
	사용 API : java.sql.Connection.close()  
--close는 역순으로 해야한다

