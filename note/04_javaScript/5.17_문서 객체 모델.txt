문서 객체 모델 : 넓은 의미로 HTML  페이지를 인식하는 방식이고 좁은 의미로 document객체와 관련된 객체집합
태그를 자바스크립트에서 이용할 수 있는 객체로 만든 것이 문서 객체 
각 요소를 노드라 부름
1) Document 객체의 노드 생성
createElement(tagName) : 요소 노드를 생성합니다.
createTextNode(text) : 텍스트 노드를 생성한다. 
2) 문서 객체 연결
appendChild(node) : 객체에 노드를 연결합니다.

toLocaleString : 배열의 요소를 나타내는 문자열을 반환한다.  
값의 타입인 Number, Date에 따라 달라지며,
지역에 맞춘 표현방식으로 값을 변환하여 리턴한다.

setInterval() : 주기적으로 인자를 실행하는 함수
setInterval(function(){
	}, 주기)

forEach()함수는 문서객체모델에서는 불가능

※문서 객체 생성하기
 // 방법1) 1.h1태그 생성 2.textNode 생성 3.h1태그와 textNode 연결 4.h1태그를 body에 추가
 // 방법2) 1.img 태그 생성 2.src속성 setting 3.img태그를 body에 추가
 // 방법3) innerHTML을 이용
innerHTML 속성에 문자열을 할당할 수 있다
ex)
document.body.innerHTML =output;
document.body.innerHTML +='<h1>Document Object</h1>';

※문서 객체 가져오기 
1) id 이용 
getElementById(id) : 태그의 id속성이 id와 일치하는 문서 객체를 가져온다.
	var 변수명 = document.getElementById('body에 설정한 id명'); // 다른 문서 객체 가져올때도 비슷한 맥락
2)class 이용
getElementsByClassName(“class명”) ; 주어진 클래스를 가진 모든 자식 엘리먼트의 collection객체를 반환
따라서  for문을 사용하거나 특정 indext에 위치한 element를 반환받아 사용 가능
getElementsByClassName()의 return 값은 배열로 받는다. 
	
3) 이름,태그 이용
getElementsByName(name); 태그의 name 속성이 name과 일치하는 문서 객체를 배열로 가져온다.
//getElementsByName() 의 return값은 배열

4) 태그 이용
getElementsByTagName(‘태그명’); 태그에 있는 div, li, p 와 같은 특정 태그명을 가지고 있는 문서 객체를 가져온다.

5) querySelector(선택자) : 선택자 요소 중 첫번째 하나만 가져옴 
 querySelectorAll(선택자) : 선택자 요소 모두 가져옴(배열로 return) 

removeChild는 부모에서 포함된 자식 노드가 존재할 경우 일치하는 id나 class등 과 같은 속성을 통해 자식 노드를 제거