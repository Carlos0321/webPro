(1)Servlet의 특징
①동적 웹어플리케이션 컴포넌트 ; JSP랑 같음
②.java 확장자 ; JAVA 언어를 사용하여 웹 프로그램을 제작하는 것
Servlet (Interface)
      ↑(구현)
GenericServlet (abstract)
      ↑(상속)
HttpServlet
      ↑(상속)
우리가 작성한 서블릿 클래스
③클라이언트의 요청에 동적으로 작동하고, 응답은 html을 이용
④java thread이용하여 동작 ; 서블릿을 이용하는 가장 큰 장점. 웹컴포넌트를 구성하는 다른 언어에 비해, 요청이 많이 들어와도 서버의 부하가 많이 걸리지 않는 장점
⑤MVC패턴에서 Controller 부분에 이용됨

서블릿은 일반 클래스와 다르게 상속받아야 하는 클래스가 있다. 

패키지명 나오고, 클래스명 체크, 상속받은 클래스도 체크, 이 클래스의 닉네임 정하고, 웹브라우저에서 접근할 때 닉네임으로 접근한다. 서블릿은 doGet과 doPost 메소드 존재. doGet과 doPost안에 있는 내용이 실제로 사용자 클라이언트 웹 브라우저에 출력되거나 실행되는 부분.

@WebServlet(name = "HelloWorld", urlPatterns = { "/HWorld" }) //url 매핑 필수  어노테이션 이용
response 안에 html객체 안에 넣어줘야 함 
response.getWriter().append("Served at: ").append(request.getContextPath()); //이 부분을 실행함 
요청받을때는 request를 받고 응답할때는 response를 받음 
response.setContentType("text/html; charset=utf-8");  //한글 안깨지기 하기 위해서 


PrintWriter out = response.getWriter(); 이런 식으로 응답으로 내보낼 출력 스트림을 얻어낸 후,
out.println("<html><body>Hello World!</body></html>"); 이런 식으로 스트림에 텍스트를 기록하게 된다.

-어노테이션 @ -
자바에서 사용될 때의 어노테이션은 코드 사이에 주석처럼 쓰여서 특별한 의미, 기능을 수행하도록 하는 기술이다. 즉, 프로그램에게 추가적인 정보를 제공해주는 메타데이터(meta data: 데이터를 위한 데이터)라고 볼 수 있다.

web.xml은 전체적인 servlet을 파악하기 위해서 사용, 어노테이션 없이  매핑하기 위해 사용


<!-- selected="selected"는 디폴트시키기 -->
