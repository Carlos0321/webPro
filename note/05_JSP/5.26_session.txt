세션이란?
쿠키와 마찬가지로 서버와의 관계를  유지 하기 위한 수단이다.
단, 쿠키와 달리 클라이언트의 특정 위치에 저장되는 것이 아니라, 서버상에 객체로 존재한다. 세션은 웹 컨테이너에 정보를 저장할 수 있는 내장 객체 변수이다.
따라서 세션은 서버에서만 접근이 가능하여 보안이 좋고, 저장할 수 있는 데이터에 한계가 없다(cf. 쿠키는 4kb씩 300개까지만 저장 가능하므로 1.2M의 용량의 한계가 있고, 클라이언트의 특정 폴더에 text형태로 저장되어 보안에 취약하다).
서버측은 client측의 브라우저 하나당 하나의 session객체가 생성되고 고유의 ID가 있다. 그 session객체는 JSP 컨테이너에서 자동 생성

세션은 클라이언트의 요청이 발생하면 서버에서 자동생성한다. 
웹 클라이언트가 서버에게 요청을 보내면 서버는 클라이언트를 식별하는 session id를 생성한다.

서버는 session id로 key와 value를 저장하는 HttpSession을 생성하고, session id를 저장하고 있는 쿠키를 생성하여 클라이언트에게 전송한다.

클라이언트는 서버 측에 요청을 보낼 때, session id를 가지고 있는 쿠키를 전송한다.

서버는 쿠키의 session id로 HttpSession을 찾는다.



Enumeration<E>는 객체들을 집합체 형태로 관리하게 해주는 인터페이스다.
이 인터페이스에는 각각의 객체들을 한번에 하나씩 처리할 수 있는 메소드를 제공한다.
논리적인 커서가 존재하여 커서를 이동하면서 데이터를 꺼내온다.

함께 쓰이는 메소드
boolean hasMoreElement() : boolean 타입을 반환 // 다음 내용이 있는지 확인
현재 커서 이후에 요소들이 있는지 여부를 체크한다. 
요소가 있으면 true, 없으면 false를 반환

E nextElement(): E 타입을 반환(E는 Enumeration 객체를 생성할 때 쓰는 타입과 동일하게 지정한다.)
커서를 다음 요소로 이동시키고, 가리키고 있는 요소 객체를 꺼내 반환한다. 
