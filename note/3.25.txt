스트레티지 패턴(Strategy Pattern)
기능 하나를 정의하고 각각을 캡슐화하여 교환해서 사용할 수 있도록 만든다.

스트래티지를 활용하면 기능(알고리즘)을 사용하는 클라이언트와는 독립적으로 기능(알고리즘)을 변경할 수 있다.
쉽게 말하면, 어떤 객체를 만들 때 객체가 가지는 기능들이 다양하게 존재할 것 입니다. 이러한 기능들을 추상화하여 언제든지 적용할 수 있게 만드는 것입니다. 즉 기능을 부품화, 표준화 하는 것입니다.

String은 분명 대문자로 시작하므로, 기초데이터가 아닌 객체데이터입니다. 하지만 뒤에 생성자(new)를 사용하지 않고 기초데이터를 만들 때처럼 초기화 하고 있습니다.

※String의 주요 기능들(메소드)
String concat(String str) : 저장된 문자열과 str문자열을 결합
String substring(int begin) : 시작위치부터 마지막까지의 문자열을 반환
	int length() : 문자열 길이를 반환
	String toUpperCase() : 대문자로 반환
	String toLowerCase() : 소문자로 반환
	char charAt(int index) : index 위치의 문자를 반환
	int indexOf(char ch) : 첫번째 ch문자의 위치를 반환
	int lastIndexOf(char ch) : 마지막 ch문자의 위치를 반환
	boolean equals(String str) : 지정된문자열과 str문자열이 같은지 비교
	boolean equalslgnoreCase(String str) : 대소문자구분없이 지정된문자열과 str문자열이 같은지 비교
	String trim() : 문자열 앞뒤 공백제거
	String replace(char old, char new) : 문자열 내의 old문자를 new문자로 반환
	String  repalceAll(String old, String new) : 문자열 내의 old문자열을 new로 반환
